˚
bC:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\WeatherForecast.cs
	namespace 	
GestionProductos
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateOnly 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
TemperatureC 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
TemperatureF		 
=>		  "
$num		# %
+		& '
(		( )
int		) ,
)		, -
(		- .
TemperatureC		. :
/		; <
$num		= C
)		C D
;		D E
public 
string 
? 
Summary 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Ñ
ZC:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder		 
.		 
Services		 
.		 
AddControllers		 
(		  
)		  !
;		! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddDbContext 
< 
AppDBContext *
>* +
(+ ,
options, 3
=>4 6
options 
. 
UseSqlServer 
( 
builder  
.  !
Configuration! .
.. /
GetConnectionString/ B
(B C
$strC U
)U V
)V W
)W X
;X Y
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
app 
. 
Run 
( 
) 	
;	 
°
}C:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\Migrations\20250114123602_InitialMigration.cs
	namespace 	
GestionProductos
 
. 

Migrations %
{ 
public 

partial 
class 
InitialMigration )
:* +
	Migration, 5
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ì
zC:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\Migrations\20250109133940_InitialCreate.cs
	namespace 	
GestionProductos
 
. 

Migrations %
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
trueS W
)W X
,X Y
Descripcion 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
Precio 
= 
table "
." #
Column# )
<) *
decimal* 1
>1 2
(2 3
type3 7
:7 8
$str9 H
,H I
nullableJ R
:R S
falseT Y
)Y Z
,Z [
Stock 
= 
table !
.! "
Column" (
<( )
int) ,
>, -
(- .
type. 2
:2 3
$str4 9
,9 :
nullable; C
:C D
falseE J
)J K
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
migrationBuilder!! 
.!! 
	DropTable!! &
(!!& '
name"" 
:"" 
$str"" !
)""! "
;""" #
}## 	
}$$ 
}%% ç
xC:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\Controllers\WeatherForecastController.cs
	namespace 	
GestionProductos
 
. 
Controllers &
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private		 
static		 
readonly		 
string		  &
[		& '
]		' (
	Summaries		) 2
=		3 4
new		5 8
[		8 9
]		9 :
{

 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
( 
Name 
= 
$str ,
), -
]- .
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date 
= 
DateOnly 
.  
FromDateTime  ,
(, -
DateTime- 5
.5 6
Now6 9
.9 :
AddDays: A
(A B
indexB G
)G H
)H I
,I J
TemperatureC 
= 
Random %
.% &
Shared& ,
., -
Next- 1
(1 2
-2 3
$num3 5
,5 6
$num7 9
)9 :
,: ;
Summary 
= 
	Summaries #
[# $
Random$ *
.* +
Shared+ 1
.1 2
Next2 6
(6 7
	Summaries7 @
.@ A
LengthA G
)G H
]H I
} 
) 
. 
ToArray 
( 
) 
; 
} 	
}   
}!! √
rC:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\Controllers\ProductosController.cs
	namespace 	
GestionProductos
 
. 
Controllers &
{ 
[ 
Route 
( 
$str 
) 
] 
[ 
ApiController 
] 
public 
class 
ProductosController !
:" #

Controller$ .
{		 
private

 	
readonly


 
AppDBContext

 

_dbContext

  *
;

* +
public 
string	 
password 
; 
public 
ProductosController	 
( 
AppDBContext )
	dbContext* 3
)3 4
{ 

_dbContext 
= 
	dbContext 
; 
} 
[ 
HttpGet 

]
 
public 
async	 
Task 
< 
IActionResult !
>! "
GetProducts# .
(. /
)/ 0
{ 
return 	
Ok
 
( 
await 

_dbContext 
. 
	Productos '
.' (
ToListAsync( 3
(3 4
)4 5
)5 6
;6 7
} 
[ 
HttpPost 
] 
public 
async	 
Task 
< 
IActionResult !
>! "
PostProductos# 0
(0 1
Producto1 9
producto: B
)B C
{ 
if 
( 
producto 
. 
Precio 
< 
$num 
) 
return "

BadRequest# -
(- .
$str. O
)O P
;P Q

_dbContext 
. 
	Productos 
. 
Add 
( 
producto $
)$ %
;% &
await 

_dbContext	 
. 
SaveChangesAsync $
($ %
)% &
;& '
return 	
Ok
 
( 
producto 
) 
; 
} 
}%% 
}&& ¢
_C:\Users\Admin\source\repos\Testing_SonarQube\GestionProductos\GestionProductos\AppDBContext.cs
	namespace 	
GestionProductos
 
{ 
public 
class 
AppDBContext 
: 
	DbContext &
{ 
public 
AppDBContext	 
( 
DbContextOptions &
<& '
AppDBContext' 3
>3 4
options5 <
)< =
:= >
base? C
(C D
optionsD K
)K L
{M N
}

 
public 
DbSet	 
< 
Producto 
> 
	Productos "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
public 
class 
Producto 
{ 
public 
int	 
Id 
{ 
get 
; 
set 
; 
} 
public 
string	 
? 
Nombre 
{ 
get 
; 
set "
;" #
}$ %
public 
string	 
? 
Descripcion 
{ 
get "
;" #
set$ '
;' (
}) *
public 
decimal	 
Precio 
{ 
get 
; 
set "
;" #
}$ %
public 
int	 
Stock 
{ 
get 
; 
set 
; 
}  
} 
} 